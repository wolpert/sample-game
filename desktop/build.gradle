/*
 * Copyright (c) 2020-2021. CodeHead Systems. All rights reserved
 * Ned Wolpert <ned.wolpert@codeheadsystems.com>
 */

project.ext.assetsDir = new File("../core/assets")

apply plugin: "java-library"
apply plugin: "eclipse"

ext {
    appName = "sample"
}

configurations {
    project.archivesBaseName = "${appName}"
    jar.archiveBaseName = "${appName}"
}

dependencies {
    implementation("com.codeheadsystems:gamelib-desktop:${gamelibVersion}")
    implementation("com.codeheadsystems:gamelib-core:${gamelibVersion}")
    implementation("com.codeheadsystems:gamelib-entity:${gamelibVersion}")
    implementation("com.codeheadsystems:gamelib-box2d:${gamelibVersion}")
    implementation("com.codeheadsystems:gamelib-hex:${gamelibVersion}")
    implementation project(":core")
    api libs.gdx.backend.lwjgl3
    api "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
    api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    api "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
    api "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
    api "com.badlogicgames.gdx:gdx-bullet-platform:$gdxVersion:natives-desktop"

    implementation libs.dagger
    annotationProcessor libs.dagger.compiler
}

tasks.register('run', JavaExec) {
    dependsOn classes
    mainClass = "com.codeheadsystems.sample.desktop.BasicDesktopLauncher"
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    setIgnoreExitValue(true)
}

tasks.register('entity', JavaExec) {
    dependsOn classes
    mainClass = "com.codeheadsystems.sample.desktop.EntityDesktopLauncher"
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    setIgnoreExitValue(true)
}

tasks.register('box2d', JavaExec) {
    dependsOn classes
    mainClass = "com.codeheadsystems.sample.desktop.Box2dDesktopLauncher"
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    setIgnoreExitValue(true)
}

tasks.register('hex', JavaExec) {
    dependsOn classes
    mainClass = "com.codeheadsystems.sample.desktop.HexDesktopLauncher"
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    setIgnoreExitValue(true)
}

tasks.register('battle', JavaExec) {
    dependsOn classes
    mainClass = "com.codeheadsystems.sample.desktop.BattleDesktopLauncher"
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    setIgnoreExitValue(true)
}

tasks.register('debug', JavaExec) {
    dependsOn classes
    mainClass = "com.codeheadsystems.sample.desktop.BasicDesktopLauncher"
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    setIgnoreExitValue(true)
    debug = true
}

tasks.register('dist', Jar) {
    manifest {
        attributes 'Main-Class': "com.codeheadsystems.sample.desktop.BasicDesktopLauncher"
    }
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}


dist.dependsOn classes
eclipse.project.name = appName + "-desktop"
